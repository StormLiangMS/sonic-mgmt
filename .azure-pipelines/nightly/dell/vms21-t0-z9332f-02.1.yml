name: NightlyTest_$(Build.DefinitionName)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: "0 1 * * 0-5"
    displayName: Nightly Scheduler
    branches:
      include:
        - internal-202012
    always: true

variables:
  - group: SONIC_IMAGE_URLS
  - group: SAITHRIFT_URLS

parameters:
  - name: TESTBED_NAME
    type: string
    default: vms21-t0-z9332f-02
    displayName: "Testbed Name"

  # Upgrade parameters
  - name: IMAGE_URL
    type: string
    default: $(IMAGE_BRCM_202012)
    displayName: "Image URL"

  # Deploy parameters
  - name: ENABLE_DATAACL
    type: boolean
    default: false

  # Test Parameters
  - name: PY_SAITHRIFT_URL
    type: string
    default: $(SAITHRIFT_BRCM_202012)
    displayName: "py_saithrift URL"

  # Testbed specific, skip unsupported test cases
  # Unsupported platform API test cases are skipped
  - name: SKIP_SCRIPTS
    type: string
    default: "platform_tests/api/test_chassis.py::TestChassisApi::test_status_led \
              platform_tests/api/test_chassis.py::TestChassisApi::test_get_thermal_manager \
              platform_tests/api/test_chassis_fans.py::TestChassisFans::test_get_fans_target_speed \
              platform_tests/api/test_chassis_fans.py::TestChassisFans::test_set_fans_speed \
              platform_tests/api/test_chassis_fans.py::TestChassisFans::test_set_fans_led \
              platform_tests/api/test_fan_drawer.py::TestFanDrawerApi::test_set_fan_drawers_led \
              platform_tests/api/test_fan_drawer_fans.py::TestFanDrawerFans::test_get_fans_target_speed \
              platform_tests/api/test_fan_drawer_fans.py::TestFanDrawerFans::test_set_fans_speed \
              platform_tests/api/test_fan_drawer_fans.py::TestFanDrawerFans::test_set_fans_led \
              platform_tests/api/test_psu.py::TestPsuApi::test_led \
              platform_tests/api/test_psu_fans.py::TestPsuFans::test_get_fans_target_speed \
              platform_tests/api/test_psu_fans.py::TestPsuFans::test_set_fans_speed \
              platform_tests/api/test_psu_fans.py::TestPsuFans::test_set_fans_led \
              platform_tests/api/test_thermal.py::TestThermalApi::test_get_high_threshold \
              platform_tests/api/test_thermal.py::TestThermalApi::test_get_high_critical_threshold \
              platform_tests/api/test_thermal.py::TestThermalApi::test_get_low_critical_threshold \
              platform_tests/api/test_thermal.py::TestThermalApi::test_set_high_threshold \
              platform_tests/api/test_thermal.py::TestThermalApi::test_set_low_threshold \
              platform_tests/api/test_thermal.py::TestThermalApi::test_get_minimum_recorded \
              platform_tests/api/test_thermal.py::TestThermalApi::test_get_maximum_recorded \
              platform_tests/test_platform_info.py::test_thermal_control_load_invalid_format_json \
              platform_tests/test_platform_info.py::test_thermal_control_load_invalid_value_json \
              platform_tests/test_advanced_reboot.py::test_warm_reboot_sad \
              platform_tests/test_advanced_reboot.py::test_warm_reboot_multi_sad \
              platform_tests/test_advanced_reboot.py::test_warm_reboot_multi_sad_inboot "
    displayName: "Skip Scripts"

  # Testbed specific, to skip and/or include directories
  - name: TESTBED_SPECIFIC
    type: string
    default: '-S "sub_port_interfaces vxlan"'
    displayName: Testbed specific

stages:
  - template: ../templates/nightly_test.yml
    parameters:
      TESTBED_NAME: ${{ parameters.TESTBED_NAME }}
      IMAGE_URL: ${{ parameters.IMAGE_URL }}
      PY_SAITHRIFT_URL: ${{ parameters.PY_SAITHRIFT_URL }}
      ENABLE_DATAACL: ${{ parameters.ENABLE_DATAACL }}
      SKIP_SCRIPTS: ${{ parameters.SKIP_SCRIPTS }}
      TESTBED_SPECIFIC: ${{ parameters.TESTBED_SPECIFIC }}
